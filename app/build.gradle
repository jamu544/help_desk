plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("com.google.android.libraries.mapsplatform.secrets-gradle-plugin")
}

android {
    namespace 'com.jamsand.thehelpdeskapp'
    compileSdkVersion 34

    defaultConfig {
        applicationId "com.jamsand.thehelpdeskapp"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildFeatures {
            buildConfig = true
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        manifestPlaceholders = [googleMapsApiKey: "${properties.getProperty('MAPS_API_KEY')}"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    secrets {
// Optionally specify a different file name containing your secrets.
        // The plugin defaults to "local.properties"
        propertiesFileName = "secrets.properties"

        // A properties file containing default secret values. This file can be
        // checked in version control.
        defaultPropertiesFileName = "local.properties"

        // Configure which keys should be ignored by the plugin by providing regular expressions.
        // "sdk.dir" is ignored by default.
        ignoreList.add("keyToIgnore") // Ignore the key "keyToIgnore"
        ignoreList.add("sdk.*")       // Ignore all keys matching the regexp "sdk.*"
    }
    buildFeatures {
        buildConfig = true
    }

}
dependencies {
    // For Map fragment
    implementation 'com.google.android.libraries.places:places:3.5.0'
    // To make a call to for getting Coordinates response from a Web URL
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    // Maps SDK for Android
    implementation 'com.google.android.gms:play-services-maps:19.0.0'
    //libraries for location tracking and displaying location on a map
    implementation 'com.google.android.gms:play-services-location:21.3.0'
    implementation 'com.google.android.gms:play-services-maps:19.0.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.activity:activity:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // with the compose versions.
    implementation("com.google.android.gms:play-services-maps:19.0.0")
    // KTX for the Maps SDK for Android library
    implementation("com.google.maps.android:maps-ktx:5.0.0")
    // KTX for the Maps SDK for Android Utility Library
    implementation("com.google.maps.android:maps-utils-ktx:5.0.0")
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    // Google Maps Compose library
    implementation("com.google.maps.android:maps-compose:4.4.1")
    // Google Maps Compose utility library
    implementation("com.google.maps.android:maps-compose-utils:4.4.1")
    // Google Maps Compose widgets library
    implementation("com.google.maps.android:maps-compose-widgets:4.4.1")

    implementation 'com.google.android.gms:play-services-places:17.1.0'



}